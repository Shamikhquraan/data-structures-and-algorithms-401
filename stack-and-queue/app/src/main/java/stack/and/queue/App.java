/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package stack.and.queue;

public class App {
    public static void main(String[] args) {
        Stack<Integer> myStack = new Stack<Integer>();
        System.out.println("i will push int numbers by push function :");
        myStack.push(7);
        myStack.push(3);
        myStack.push(2);
        myStack.push(5);
        myStack.push(20);
        System.out.println(myStack);
        System.out.println("now i want to call Pop function with this stack , " +
                "it will give me the array with out the tob number ~20~ :");
        myStack.pop();
        System.out.println(myStack);
        System.out.println("Now i want add element to queue and print them , it will give me :");
        Queue<Integer> myQueue = new Queue<>();
        myQueue.enqueue(2);
        myQueue.enqueue(14);
        myQueue.enqueue(3);
        myQueue.enqueue(0);
        myQueue.enqueue(6);
        myQueue.enqueue(1);
        System.out.println(myQueue.toString());
        System.out.println();
        System.out.println("now i want to print the peek:");
        System.out.println(myQueue.peek());
        System.out.println( "to remove from a queue i will use dequeue function and print the queue after that :");
        System.out.println(myQueue.dequeue());
        System.out.println(myQueue.toString());
        System.out.println( "if i want i can print the size :");
        System.out.println(myQueue.size);


        System.out.println("Now i want to use enqueue by pseudoQueue:");
        PseudoQueue<Integer> PseudoQueue1 = new PseudoQueue<>();
        PseudoQueue1.enQueue(20);
        PseudoQueue1.enQueue(3);
        PseudoQueue1.enQueue(10);
        System.out.println("This is PseudoQueue after enQueue three elemnts:");
        System.out.println(PseudoQueue1);
        System.out.println("peek:");
        System.out.println(PseudoQueue1.peek());
        System.out.println("The size of PseudoQueue after enQueue three elemnts:");
        System.out.println(PseudoQueue1.getSize());
        System.out.println("Now i want to use deQueue by pseudoQueue it should give me:");
        System.out.println(PseudoQueue1.deQueue());
        System.out.println(PseudoQueue1);

//now we will add summa :
        AnimalShelter shop = new AnimalShelter();
        shop.enq("dog");
        shop.enq("dog");
        shop.enq("dog");
        shop.enq("dog");
        shop.enq("cat");
        shop.enq("fish");
        shop.enq("Shamikh");

        System.out.println(shop.deqCat());
        System.out.println(shop.deqAny());


    }
    }

